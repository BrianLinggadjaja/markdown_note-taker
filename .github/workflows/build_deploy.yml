# Name of the workflow called under GitHub Actions
name: Build Repo & Deploy to Specified Branch

# Controls when the action will run.
on:
  # Triggers the workflow on push events but only for the main or test-action branch
  push:
    branches: [main, test-action]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build job
  build:
    name: Build into compiled dist directory

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: main

      # Install yarn package manager
      - name: Install yarn
        run: |
          npm install yarn
          rm package-lock.json

      # Install project dependencies
      - name: Install dependencies
        run: yarn

      # Compiles repository under dist
      - name: Compile code
        run: yarn build

      # Save compiled code as artifact
      - name: Upload built directory
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
          # Amount of days an artifact is stored before being deleted
          retention-days: 1

  # Deploy job
  deploy:
    name: Deploy compiled code into target branch
    # Requires a job called "build" as a dependency before starting
    needs: build

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: prod

      # Download new compiled code artifact
      - name: Download compiled dist artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          # Download into current project directory
          path: ~/dist

      - name: Move compiled code artifact into working directory
        run: mv ~/dist ./

      # Moves ".git" (git history) + "CNAME" into "dist" directory
      # Configures git credentials before pushing up to target branch
      - name: Package new compiled code & deploy to target branch
        run: |
          mv .git ./dist
          cd dist
          git config --global user.email "github-action@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git add .
          git commit -m "Automatic build deployment"
          git push
